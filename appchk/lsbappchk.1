.TH lsbappchk "1" "" "lsbappchk (LSB)" LSB
.SH NAME
lsbappchk \- check LSB conformance of application or shared library
.SH SYNOPSIS
.B lsbappchk
.RB [ \-hvn ]
.RB [ \-T
.IR PRODUCT ]
.RB [ \-M
.IR MODULE ]...
.RB [ \-L
.IR LIB ]...
.RB [ \-j
.IR JOURNAL ]
.RI [ long-options ]
.I appname
.br
.B lsbappchk
.RB [ \-hvn ]
.RB [ \-T
.IR PRODUCT ]
.RB [ \-M
.IR MODULE ]...
.RB [ \-j
.IR JOURNAL ]
.RI [ long-options ]
.B \-L
.I LIB
.SH DESCRIPTION
.PP
In the first form,
measure an application executable's conformance to the Linux Standard
Base (LSB) specification. The object format of the application is
checked, as is the list of shared libraries used by the application,
and the list of functions and global data used by the
application. Warnings are produced for anything that is referenced
but not contained in the LSB specification. 
.IR lsbappchk 's
view of valid libraries and interfaces can be expanded.
.PP
In the second form, a shared library is examined individually,
rather than in the context of a binary linked with it.
This is useful for shared libraries that may be development targets
on their own.
.TP
\fB\-h\fR, \fB--help\fR
Print a help message and exit.
.TP
\fB\-v\fR, \fB--version\fR
Output the program version and LSB version to standard output.
The version and LSB version are always logged to the journal
file irrespective of this option.
.TP
\fB\-n\fR, \fB--nojournal\fR
Do not create a journal file.
.TP
\fB\-r \fIVERSION\fR, \fB--lsb-version=\fIVERSION\fR
Specify the lsb version the application should be checked against.
.TP
\fB\-T \fI[core,c++|core,c++,desktop]\fR, \fB--lsb-product=\fI[core,c++|core,c++,desktop]\fR
Specify the lsb spec/product to load modules for - 3.0, and 3.1,
respectively.
.TP
\fB\-M \fIMODULE\fR, \fB--module\fR=\fIMODULE\fR
Also check the symbols found in \fIMODULE\fR.
The default module name is LSB-Core. Other choices are
LSB-Graphics and LSB-C++ (module names are not case-sensitive).
.TP
\fB\-L \fILIB\fR
Specify the full pathname of a shared library which is part of the application.
This option can be specified as many times as needed, and will prevent 
.I lsbappchk
from complaining about symbols which are provided in those shared
libraries. The order of libraries specified this way is significant:
since 
.I lsbappchk
does not actually run the application, it cannot deduce the
library dependency graph.
.br
This option may also be used if a shared library needs to be
checked standalone.
.TP
\fB\-j \fIJOURNAL\fR, \fB--journal\fR=\fIJOURNAL\fR
Write the journal file to \fIJOURNAL\fR
instead of to the default filename in the current directory.
.PP
A journal file named 
.BI journal.appchk. appname
is created, where 
.I appname
is the binary specified on the command line. It contains a record of
the test results in a format that can be submitted for LSB Certification.
You must have write access to the current working directory
in order to run 
.I lsbappchk
successfully, or use the \fB-j\fR option to
specify an alternate location for the journal.
The journal file can be omitted by the use of the \fB\-n\fP option.
Journal files may be examined with the
.I tjreport
tool, available from the LSB project as part of the
.B lsb-tet3-lite
package.
.PP
If there are several related binaries in a package build,
.I lsbappchk
may be called with multiple names on the command line,
producing a single journal file, or it may be called
multiple times to produce individual journal files.
In the former case, the default journal name will include
the name of the first binary specified.
.PP
The 
.I lsbappchk
program cannot detect all conformance problems.  In particular,
it is a static test and does not actually run the application.  
.I lsbappchk
will not find any behaviors which show themselves only at run\-time
(for example, anything involving the File Hierarchy Standard, or
constants and other such items which are found in header files). 
.I lsbappchk
will warn that it cannot determine the validity of a call to \fIioctl\fR.
The dynamic checker 
.RI ( lsbdynchk )
should be used to test run\-time behavior.
.SH "NOTES"
.I lsbappchk
is intended to be used on applications compiled in LSB mode.
When used as an analysis tool on non-LSB applications, it will 
report false negatives, such as symbols with the wrong symbol
version, which will vanish when the application is compiled correctly.
Recognizing which reports can be ignored requires detailed
knowledge of the LSB and of the libraries in question.
.SH "AUTHORS"
The contributors to the Linux Standard Base.
.SH "REPORTING BUGS"
If you obtained this checker from the LSB ftp site,
report bugs at http://bugs.linuxbase.org or email to
<lsb-discuss@linux-foundation.org>.  If you obtained this
from your distribution, report bugs back to the
distribution in the normal way.
.SH "SEE ALSO"
Linux Standard Base specification and other documents at
http://www.linux-foundation.org/
